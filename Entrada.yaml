# Lista de estados
q_states:
  q_list:
  - 'A'
  - 'B'
  - 'C'
  - 'D'
  - 'E'
  - 'F'
  - 'G'
  - 'H'
  - 'I'  
  initial: 'A'
  final: 'H'

# Alfabetos de la MT
alphabet:
- a
- b
tape_alphabet:
- "_"
- X
- a
- b

# Función de transición
delta:
# Transiciones
# A
- params:
    initial_state: 'A'
    mem_cache_value: 
    tape_input: 'a'
  output:
    final_state: 'B'
    mem_cache_value:
    tape_output: '_'
    tape_displacement: R

- params:
    initial_state: 'A'
    mem_cache_value: 
    tape_input: 'b'
  output:
    final_state: 'I'
    mem_cache_value:
    tape_output: '_'
    tape_displacement: R

- params:
    initial_state: 'A'
    mem_cache_value: 
    tape_input: 'X'
  output:
    final_state: 'I'
    mem_cache_value:
    tape_output: '_'
    tape_displacement: R

- params:
    initial_state: 'A'
    mem_cache_value: 
    tape_input: '_'
  output:
    final_state: 'I'
    mem_cache_value:
    tape_output: '_'
    tape_displacement: S

- params:
    initial_state: 'B'
    mem_cache_value: 
    tape_input: 'a'
  output:
    final_state: 'B'
    mem_cache_value:
    tape_output: 'a'
    tape_displacement: R

- params:
    initial_state: 'B'
    mem_cache_value: 
    tape_input: 'b'
  output:
    final_state: 'C'
    mem_cache_value:
    tape_output: 'X'
    tape_displacement: R

- params:
    initial_state: 'B'
    mem_cache_value: 
    tape_input: 'X'
  output:
    final_state: 'B'
    mem_cache_value:
    tape_output: 'X'
    tape_displacement: R

- params:
    initial_state: 'B'
    mem_cache_value: 
    tape_input: '_'
  output:
    final_state: 'I'
    mem_cache_value:
    tape_output: '_'
    tape_displacement: R

- params:
    initial_state: 'C'
    mem_cache_value: 
    tape_input: 'a'
  output:
    final_state: 'I'
    mem_cache_value:
    tape_output: '_'
    tape_displacement: R

- params:
    initial_state: 'C'
    mem_cache_value: 
    tape_input: 'b'
  output:
    final_state: 'D'
    mem_cache_value:
    tape_output: 'b'
    tape_displacement: L

- params:
    initial_state: 'C'
    mem_cache_value: 
    tape_input: 'X'
  output:
    final_state: 'I'
    mem_cache_value:
    tape_output: '_'
    tape_displacement: R

- params:
    initial_state: 'C'
    mem_cache_value: 
    tape_input: '_'
  output:
    final_state: 'G'
    mem_cache_value:
    tape_output: '_'
    tape_displacement: L

- params:
    initial_state: 'D'
    mem_cache_value: 
    tape_input: 'a'
  output:
    final_state: 'E'
    mem_cache_value:
    tape_output: 'a'
    tape_displacement: L

- params:
    initial_state: 'D'
    mem_cache_value: 
    tape_input: 'b'
  output:
    final_state: 'I'
    mem_cache_value:
    tape_output: '_'
    tape_displacement: R

- params:
    initial_state: 'D'
    mem_cache_value: 
    tape_input: 'X'
  output:
    final_state: 'D'
    mem_cache_value:
    tape_output: 'X'
    tape_displacement: L

- params:
    initial_state: 'D'
    mem_cache_value: 
    tape_input: '_'
  output:
    final_state: 'I'
    mem_cache_value:
    tape_output: '_'
    tape_displacement: R

- params:
    initial_state: 'E'
    mem_cache_value: 
    tape_input: 'a'
  output:
    final_state: 'E'
    mem_cache_value:
    tape_output: 'a'
    tape_displacement: L

- params:
    initial_state: 'E'
    mem_cache_value: 
    tape_input: 'b'
  output:
    final_state: 'I'
    mem_cache_value:
    tape_output: '_'
    tape_displacement: R

- params:
    initial_state: 'E'
    mem_cache_value: 
    tape_input: 'X'
  output:
    final_state: 'F'
    mem_cache_value:
    tape_output: 'X'
    tape_displacement: R

- params:
    initial_state: 'E'
    mem_cache_value: 
    tape_input: '_'
  output:
    final_state: 'F'
    mem_cache_value:
    tape_output: '_'
    tape_displacement: R

- params:
    initial_state: 'F'
    mem_cache_value: 
    tape_input: 'a'
  output:
    final_state: 'B'
    mem_cache_value:
    tape_output: 'X'
    tape_displacement: R

- params:
    initial_state: 'F'
    mem_cache_value: 
    tape_input: 'b'
  output:
    final_state: 'I'
    mem_cache_value:
    tape_output: '_'
    tape_displacement: R

- params:
    initial_state: 'F'
    mem_cache_value: 
    tape_input: 'X'
  output:
    final_state: 'I'
    mem_cache_value:
    tape_output: '_'
    tape_displacement: R

- params:
    initial_state: 'F'
    mem_cache_value: 
    tape_input: '_'
  output:
    final_state: 'I'
    mem_cache_value:
    tape_output: '_'
    tape_displacement: R

- params:
    initial_state: 'G'
    mem_cache_value: 
    tape_input: 'a'
  output:
    final_state: 'I'
    mem_cache_value:
    tape_output: '_'
    tape_displacement: R

- params:
    initial_state: 'G'
    mem_cache_value: 
    tape_input: 'b'
  output:
    final_state: 'I'
    mem_cache_value:
    tape_output: '_'
    tape_displacement: R

- params:
    initial_state: 'G'
    mem_cache_value: 
    tape_input: 'X'
  output:
    final_state: 'G'
    mem_cache_value:
    tape_output: 'X'
    tape_displacement: L

- params:
    initial_state: 'G'
    mem_cache_value: 
    tape_input: '_'
  output:
    final_state: 'H'
    mem_cache_value:
    tape_output: '_'
    tape_displacement: R


# Cadenas a ser simuladas por su MT luego de parsearla y generarla
simulation_strings:
- aabb
- aaabbb
- aabbb
- bbbab
